,A,B,C,D,E,F
1,~~~ Paper Details ~~~~, , , , ,
2,bibliographicCitation,"{henzinger2023, author = {Henzinger, Thomas and Karimi, Mahyar and Kueffner, Konstantin and Mallik, Kaushik}, title = {Runtime Monitoring of Dynamic Fairness Properties}, year = {2023}}", , , ,
3,~~~ Annotator Details ~~~~, , , , ,
4,identifier,dk, , , ,
5,role,annotator,DO NOT CHANGE, , ,
6,generatedAtTime,2023-12-13, , , ,
7,~~~ Class Instance / Individual Annotations starts below ~~~~, , , , ,
8,individualName,type,sourceExcerpt,sourcePageNumber,sourceExtractedDescription,
9,LendingProblem,Perceived_Problem,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,the lending problem,
10,LendingMonitor,Agent,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,LendingMonitor,
11,RealTimeBiasDetection,Goal,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,"it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react",
12,ExpectedCreditScoreEstimations,Artifact,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,compute the interval estimates for the expected credit score of the two groups respectively,
13, , , , , ,
14,~~~ Property / Axiom / Triple Annotations starts below ~~~~, , , , ,
15,annotatedSource,annotatedProperty,annotatedTarget,sourceExcerpt,sourcePageNumber,sourceExtractedDescription
16,LendingProblem,constrainsAgent,LendingMonitor,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,"The monitor for the lending problem, called LendingMonitor"
17,LendingMonitor,hasProducedArtifact,ExpectedCreditScoreEstimations,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,"LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively."
18,RealTimeBiasDetection,constrainsAgent,LendingMonitor,"Now we present a monitoring algorithm for the lending example that we took from the literature [25]. Suppose we have a bank that lends money to individuals by taking into account their credit score and group membership information. Every individual has a credit score that may change over time, and let [0..𝑐max] be the set of all possible credit scores of every individual. Also, the population is divided into groups 𝐴 and 𝐵, as usual, and let the number of individuals in the groups be 𝑁𝐴 and 𝑁𝐵 , respectively. At every step, the bank gets the credit score and the group information of a randomly chosen individual, and decides whether to accept or reject the loan application. If the loan is granted and is subsequently repaid, then the respective individual’s credit score increases by1, provided her initial credit score was smaller than 𝑐max. On the other hand, if the loan is granted but defaulted, then the credit score decreases by 1, provided her initial credit score was greater than 0. If the loan is rejected, then the individual’s credit score remains unchanged. We want to monitor, after each observation, if the bank’s policy leads to unfair distribution of the expected credit score among the individuals of the two groups 𝐴 and 𝐵. The monitor for the lending problem, called LendingMonitor, is shown in Alg. 2. Internally, LendingMonitor runs two ExpEstimator (see Alg. 1) sub-monitors 𝑀𝐴 and 𝑀𝐵 in parallel,which compute the interval estimates for the expected credit score of the two groups respectively. After each new observation, depending on the group information of the selected individual, therespective monitor’s Compute function is invoked, and a new es-timate for that group is computed. This is possible because 𝑋𝑡 isa bounded random variable, making it sub-gaussian with param-eter 𝑐2max (which implies it is sub-exponential with 𝜈 = 0). The Output of LendingMonitor is the difference between the two in-terval estimates computed by 𝑀𝐴 and 𝑀𝐵 . Observe that each of𝑀𝐴 and 𝑀𝐵 uses higher confidence level 1 − 𝛿2 , so that the final confidence of the output estimate becomes 1 − 𝛿, after applying the union bound. For simplicity, we chose union bound to compute the overall confidence, however, tighter interval estimates can be computed by observing that the group-specific stochastic processes are statistically independent, thereby allowing us to use the sharper bounds from the Hoeffding’s inequality (see [33, p. 24]). interestingly, we note that the MaxRad agent’s policy becomes more fair in the long run compared to the EqOpp agent’s policy.This phenomenon has already been demonstrated in the existing literature [9]. With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react (i.e., whether they repay or not). ",610-1,"With our monitors, it is actually possible to detect such biases in real-time, without any information or assumption about what policy the bank is using or how the individuals will react"
